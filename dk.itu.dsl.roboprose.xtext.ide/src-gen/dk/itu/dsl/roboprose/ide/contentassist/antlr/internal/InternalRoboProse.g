/*
 * generated by Xtext 2.12.0
 */
grammar InternalRoboProse;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.itu.dsl.roboprose.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.itu.dsl.roboprose.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.itu.dsl.roboprose.services.RoboProseGrammarAccess;

}
@parser::members {
	private RoboProseGrammarAccess grammarAccess;

	public void setGrammarAccess(RoboProseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRoboProse
entryRuleRoboProse
:
{ before(grammarAccess.getRoboProseRule()); }
	 ruleRoboProse
{ after(grammarAccess.getRoboProseRule()); } 
	 EOF 
;

// Rule RoboProse
ruleRoboProse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoboProseAccess().getGroup()); }
		(rule__RoboProse__Group__0)
		{ after(grammarAccess.getRoboProseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMain
entryRuleMain
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainAccess().getGroup()); }
		(rule__Main__Group__0)
		{ after(grammarAccess.getMainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventListener
entryRuleEventListener
:
{ before(grammarAccess.getEventListenerRule()); }
	 ruleEventListener
{ after(grammarAccess.getEventListenerRule()); } 
	 EOF 
;

// Rule EventListener
ruleEventListener 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventListenerAccess().getGroup()); }
		(rule__EventListener__Group__0)
		{ after(grammarAccess.getEventListenerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSublistenerDelimiter
entryRuleSublistenerDelimiter
:
{ before(grammarAccess.getSublistenerDelimiterRule()); }
	 ruleSublistenerDelimiter
{ after(grammarAccess.getSublistenerDelimiterRule()); } 
	 EOF 
;

// Rule SublistenerDelimiter
ruleSublistenerDelimiter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSublistenerDelimiterAccess().getFullStopKeyword()); }
		'.'
		{ after(grammarAccess.getSublistenerDelimiterAccess().getFullStopKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionDelimiter
entryRuleActionDelimiter
:
{ before(grammarAccess.getActionDelimiterRule()); }
	 ruleActionDelimiter
{ after(grammarAccess.getActionDelimiterRule()); } 
	 EOF 
;

// Rule ActionDelimiter
ruleActionDelimiter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionDelimiterAccess().getGroup()); }
		(rule__ActionDelimiter__Group__0)
		{ after(grammarAccess.getActionDelimiterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParagraphDelimiter
entryRuleParagraphDelimiter
:
{ before(grammarAccess.getParagraphDelimiterRule()); }
	 ruleParagraphDelimiter
{ after(grammarAccess.getParagraphDelimiterRule()); } 
	 EOF 
;

// Rule ParagraphDelimiter
ruleParagraphDelimiter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParagraphDelimiterAccess().getGroup()); }
		(rule__ParagraphDelimiter__Group__0)
		{ after(grammarAccess.getParagraphDelimiterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getAlternatives()); }
		(rule__Event__Alternatives)
		{ after(grammarAccess.getEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurn
entryRuleTurn
:
{ before(grammarAccess.getTurnRule()); }
	 ruleTurn
{ after(grammarAccess.getTurnRule()); } 
	 EOF 
;

// Rule Turn
ruleTurn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurnAccess().getGroup()); }
		(rule__Turn__Group__0)
		{ after(grammarAccess.getTurnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStop
entryRuleStop
:
{ before(grammarAccess.getStopRule()); }
	 ruleStop
{ after(grammarAccess.getStopRule()); } 
	 EOF 
;

// Rule Stop
ruleStop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopAccess().getGroup()); }
		(rule__Stop__Group__0)
		{ after(grammarAccess.getStopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEFloat
entryRuleEFloat
:
{ before(grammarAccess.getEFloatRule()); }
	 ruleEFloat
{ after(grammarAccess.getEFloatRule()); } 
	 EOF 
;

// Rule EFloat
ruleEFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEFloatAccess().getGroup()); }
		(rule__EFloat__Group__0)
		{ after(grammarAccess.getEFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObstacle
entryRuleObstacle
:
{ before(grammarAccess.getObstacleRule()); }
	 ruleObstacle
{ after(grammarAccess.getObstacleRule()); } 
	 EOF 
;

// Rule Obstacle
ruleObstacle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObstacleAccess().getGroup()); }
		(rule__Obstacle__Group__0)
		{ after(grammarAccess.getObstacleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTapped
entryRuleTapped
:
{ before(grammarAccess.getTappedRule()); }
	 ruleTapped
{ after(grammarAccess.getTappedRule()); } 
	 EOF 
;

// Rule Tapped
ruleTapped 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTappedAccess().getGroup()); }
		(rule__Tapped__Group__0)
		{ after(grammarAccess.getTappedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MOVE_DIRECTION
ruleMOVE_DIRECTION
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMOVE_DIRECTIONAccess().getAlternatives()); }
		(rule__MOVE_DIRECTION__Alternatives)
		{ after(grammarAccess.getMOVE_DIRECTIONAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TURN_DIRECTION
ruleTURN_DIRECTION
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTURN_DIRECTIONAccess().getAlternatives()); }
		(rule__TURN_DIRECTION__Alternatives)
		{ after(grammarAccess.getTURN_DIRECTIONAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RANDOM
ruleRANDOM
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRANDOMAccess().getAlternatives()); }
		(rule__RANDOM__Alternatives)
		{ after(grammarAccess.getRANDOMAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventListenerAccess().getWhenKeyword_0_0()); }
		'When'
		{ after(grammarAccess.getEventListenerAccess().getWhenKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventListenerAccess().getWhenKeyword_0_1()); }
		'when'
		{ after(grammarAccess.getEventListenerAccess().getWhenKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDelimiterAccess().getGroup_0_0()); }
		(rule__ActionDelimiter__Group_0_0__0)
		{ after(grammarAccess.getActionDelimiterAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionDelimiterAccess().getGroup_0_1()); }
		(rule__ActionDelimiter__Group_0_1__0)
		{ after(grammarAccess.getActionDelimiterAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionDelimiterAccess().getGroup_0_2()); }
		(rule__ActionDelimiter__Group_0_2__0)
		{ after(grammarAccess.getActionDelimiterAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getMoveParserRuleCall_0()); }
		ruleMove
		{ after(grammarAccess.getActionAccess().getMoveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getTurnParserRuleCall_1()); }
		ruleTurn
		{ after(grammarAccess.getActionAccess().getTurnParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getStopParserRuleCall_2()); }
		ruleStop
		{ after(grammarAccess.getActionAccess().getStopParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getObstacleParserRuleCall_0()); }
		ruleObstacle
		{ after(grammarAccess.getEventAccess().getObstacleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getTappedParserRuleCall_1()); }
		ruleTapped
		{ after(grammarAccess.getEventAccess().getTappedParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getGroup_3_0()); }
		(rule__Move__Group_3_0__0)
		{ after(grammarAccess.getMoveAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getIsRandomAssignment_3_1()); }
		(rule__Move__IsRandomAssignment_3_1)
		{ after(grammarAccess.getMoveAccess().getIsRandomAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getGroup_3_0()); }
		(rule__Turn__Group_3_0__0)
		{ after(grammarAccess.getTurnAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTurnAccess().getGroup_3_1()); }
		(rule__Turn__Group_3_1__0)
		{ after(grammarAccess.getTurnAccess().getGroup_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getTurnAccess().getIsRandomAssignment_3_2()); }
		(rule__Turn__IsRandomAssignment_3_2)
		{ after(grammarAccess.getTurnAccess().getIsRandomAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOVE_DIRECTION__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMOVE_DIRECTIONAccess().getFORWARDSEnumLiteralDeclaration_0()); }
		('forwards')
		{ after(grammarAccess.getMOVE_DIRECTIONAccess().getFORWARDSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMOVE_DIRECTIONAccess().getFORWARDSEnumLiteralDeclaration_1()); }
		('forward')
		{ after(grammarAccess.getMOVE_DIRECTIONAccess().getFORWARDSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMOVE_DIRECTIONAccess().getBACKWARDSEnumLiteralDeclaration_2()); }
		('backwards')
		{ after(grammarAccess.getMOVE_DIRECTIONAccess().getBACKWARDSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMOVE_DIRECTIONAccess().getBACKWARDSEnumLiteralDeclaration_3()); }
		('backward')
		{ after(grammarAccess.getMOVE_DIRECTIONAccess().getBACKWARDSEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getMOVE_DIRECTIONAccess().getBACKWARDSEnumLiteralDeclaration_4()); }
		('back')
		{ after(grammarAccess.getMOVE_DIRECTIONAccess().getBACKWARDSEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TURN_DIRECTION__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTURN_DIRECTIONAccess().getLEFTEnumLiteralDeclaration_0()); }
		('left')
		{ after(grammarAccess.getTURN_DIRECTIONAccess().getLEFTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTURN_DIRECTIONAccess().getRIGHTEnumLiteralDeclaration_1()); }
		('right')
		{ after(grammarAccess.getTURN_DIRECTIONAccess().getRIGHTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RANDOM__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRANDOMAccess().getRANDOMEnumLiteralDeclaration_0()); }
		('randomly')
		{ after(grammarAccess.getRANDOMAccess().getRANDOMEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRANDOMAccess().getRANDOMEnumLiteralDeclaration_1()); }
		('random')
		{ after(grammarAccess.getRANDOMAccess().getRANDOMEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group__0__Impl
	rule__RoboProse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getRoboProseAction_0()); }
	()
	{ after(grammarAccess.getRoboProseAccess().getRoboProseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group__1__Impl
	rule__RoboProse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getGroup_1()); }
	(rule__RoboProse__Group_1__0)?
	{ after(grammarAccess.getRoboProseAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getGroup_2()); }
	(rule__RoboProse__Group_2__0)?
	{ after(grammarAccess.getRoboProseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoboProse__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_1__0__Impl
	rule__RoboProse__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getMyKeyword_1_0()); }
	'My'
	{ after(grammarAccess.getRoboProseAccess().getMyKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_1__1__Impl
	rule__RoboProse__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getRobotKeyword_1_1()); }
	'robot'
	{ after(grammarAccess.getRoboProseAccess().getRobotKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_1__2__Impl
	rule__RoboProse__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getShouldKeyword_1_2()); }
	'should'
	{ after(grammarAccess.getRoboProseAccess().getShouldKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_1__3__Impl
	rule__RoboProse__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getMainAssignment_1_3()); }
	(rule__RoboProse__MainAssignment_1_3)
	{ after(grammarAccess.getRoboProseAccess().getMainAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getParagraphDelimiterParserRuleCall_1_4()); }
	ruleParagraphDelimiter
	{ after(grammarAccess.getRoboProseAccess().getParagraphDelimiterParserRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoboProse__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_2__0__Impl
	rule__RoboProse__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getListenersAssignment_2_0()); }
	(rule__RoboProse__ListenersAssignment_2_0)
	{ after(grammarAccess.getRoboProseAccess().getListenersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_2__1__Impl
	rule__RoboProse__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getGroup_2_1()); }
	(rule__RoboProse__Group_2_1__0)*
	{ after(grammarAccess.getRoboProseAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getFullStopKeyword_2_2()); }
	'.'
	{ after(grammarAccess.getRoboProseAccess().getFullStopKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoboProse__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_2_1__0__Impl
	rule__RoboProse__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getParagraphDelimiterParserRuleCall_2_1_0()); }
	ruleParagraphDelimiter
	{ after(grammarAccess.getRoboProseAccess().getParagraphDelimiterParserRuleCall_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoboProse__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoboProseAccess().getListenersAssignment_2_1_1()); }
	(rule__RoboProse__ListenersAssignment_2_1_1)
	{ after(grammarAccess.getRoboProseAccess().getListenersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Main__Group__0__Impl
	rule__Main__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainAccess().getActionsAssignment_0()); }
	(rule__Main__ActionsAssignment_0)
	{ after(grammarAccess.getMainAccess().getActionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Main__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainAccess().getGroup_1()); }
	(rule__Main__Group_1__0)*
	{ after(grammarAccess.getMainAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Main__Group_1__0__Impl
	rule__Main__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainAccess().getActionDelimiterParserRuleCall_1_0()); }
	ruleActionDelimiter
	{ after(grammarAccess.getMainAccess().getActionDelimiterParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Main__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainAccess().getActionsAssignment_1_1()); }
	(rule__Main__ActionsAssignment_1_1)
	{ after(grammarAccess.getMainAccess().getActionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventListener__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__0__Impl
	rule__EventListener__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getAlternatives_0()); }
	(rule__EventListener__Alternatives_0)
	{ after(grammarAccess.getEventListenerAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__1__Impl
	rule__EventListener__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getItKeyword_1()); }
	'it'
	{ after(grammarAccess.getEventListenerAccess().getItKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__2__Impl
	rule__EventListener__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getEventAssignment_2()); }
	(rule__EventListener__EventAssignment_2)
	{ after(grammarAccess.getEventListenerAccess().getEventAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__3__Impl
	rule__EventListener__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getItKeyword_3()); }
	'it'
	{ after(grammarAccess.getEventListenerAccess().getItKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__4__Impl
	rule__EventListener__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getShouldKeyword_4()); }
	'should'
	{ after(grammarAccess.getEventListenerAccess().getShouldKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__5__Impl
	rule__EventListener__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getActionsAssignment_5()); }
	(rule__EventListener__ActionsAssignment_5)
	{ after(grammarAccess.getEventListenerAccess().getActionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__6__Impl
	rule__EventListener__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getGroup_6()); }
	(rule__EventListener__Group_6__0)*
	{ after(grammarAccess.getEventListenerAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getGroup_7()); }
	(rule__EventListener__Group_7__0)?
	{ after(grammarAccess.getEventListenerAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventListener__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_6__0__Impl
	rule__EventListener__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getActionDelimiterParserRuleCall_6_0()); }
	ruleActionDelimiter
	{ after(grammarAccess.getEventListenerAccess().getActionDelimiterParserRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getActionsAssignment_6_1()); }
	(rule__EventListener__ActionsAssignment_6_1)
	{ after(grammarAccess.getEventListenerAccess().getActionsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventListener__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_7__0__Impl
	rule__EventListener__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getEventListenerAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_7__1__Impl
	rule__EventListener__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getButKeyword_7_1()); }
	'but'
	{ after(grammarAccess.getEventListenerAccess().getButKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_7__2__Impl
	rule__EventListener__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getSublistenersAssignment_7_2()); }
	(rule__EventListener__SublistenersAssignment_7_2)
	{ after(grammarAccess.getEventListenerAccess().getSublistenersAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_7__3__Impl
	rule__EventListener__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getGroup_7_3()); }
	(rule__EventListener__Group_7_3__0)*
	{ after(grammarAccess.getEventListenerAccess().getGroup_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getRightParenthesisKeyword_7_4()); }
	')'
	{ after(grammarAccess.getEventListenerAccess().getRightParenthesisKeyword_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventListener__Group_7_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_7_3__0__Impl
	rule__EventListener__Group_7_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getSublistenerDelimiterParserRuleCall_7_3_0()); }
	ruleSublistenerDelimiter
	{ after(grammarAccess.getEventListenerAccess().getSublistenerDelimiterParserRuleCall_7_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventListener__Group_7_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__Group_7_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventListenerAccess().getSublistenersAssignment_7_3_1()); }
	(rule__EventListener__SublistenersAssignment_7_3_1)
	{ after(grammarAccess.getEventListenerAccess().getSublistenersAssignment_7_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDelimiter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group__0__Impl
	rule__ActionDelimiter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getAlternatives_0()); }
	(rule__ActionDelimiter__Alternatives_0)
	{ after(grammarAccess.getActionDelimiterAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getGroup_1()); }
	(rule__ActionDelimiter__Group_1__0)?
	{ after(grammarAccess.getActionDelimiterAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDelimiter__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_0_0__0__Impl
	rule__ActionDelimiter__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getAndKeyword_0_0_0()); }
	'and'
	{ after(grammarAccess.getActionDelimiterAccess().getAndKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getThenKeyword_0_0_1()); }
	'then'
	{ after(grammarAccess.getActionDelimiterAccess().getThenKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDelimiter__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_0_1__0__Impl
	rule__ActionDelimiter__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getCommaKeyword_0_1_0()); }
	','
	{ after(grammarAccess.getActionDelimiterAccess().getCommaKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getThenKeyword_0_1_1()); }
	'then'
	{ after(grammarAccess.getActionDelimiterAccess().getThenKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDelimiter__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_0_2__0__Impl
	rule__ActionDelimiter__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getFullStopKeyword_0_2_0()); }
	'.'
	{ after(grammarAccess.getActionDelimiterAccess().getFullStopKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getThenKeyword_0_2_1()); }
	'Then'
	{ after(grammarAccess.getActionDelimiterAccess().getThenKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDelimiter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_1__0__Impl
	rule__ActionDelimiter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getItKeyword_1_0()); }
	'it'
	{ after(grammarAccess.getActionDelimiterAccess().getItKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDelimiter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDelimiter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDelimiterAccess().getShouldKeyword_1_1()); }
	'should'
	{ after(grammarAccess.getActionDelimiterAccess().getShouldKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParagraphDelimiter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParagraphDelimiter__Group__0__Impl
	rule__ParagraphDelimiter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParagraphDelimiter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphDelimiterAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getParagraphDelimiterAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParagraphDelimiter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParagraphDelimiter__Group__1__Impl
	rule__ParagraphDelimiter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParagraphDelimiter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphDelimiterAccess().getNEWLINETerminalRuleCall_1()); }
	RULE_NEWLINE
	{ after(grammarAccess.getParagraphDelimiterAccess().getNEWLINETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParagraphDelimiter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParagraphDelimiter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParagraphDelimiter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParagraphDelimiterAccess().getNEWLINETerminalRuleCall_2()); }
		(RULE_NEWLINE)
		{ after(grammarAccess.getParagraphDelimiterAccess().getNEWLINETerminalRuleCall_2()); }
	)
	(
		{ before(grammarAccess.getParagraphDelimiterAccess().getNEWLINETerminalRuleCall_2()); }
		(RULE_NEWLINE)*
		{ after(grammarAccess.getParagraphDelimiterAccess().getNEWLINETerminalRuleCall_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveAction_0()); }
	()
	{ after(grammarAccess.getMoveAccess().getMoveAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
	rule__Move__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveKeyword_1()); }
	'move'
	{ after(grammarAccess.getMoveAccess().getMoveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__2__Impl
	rule__Move__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getDirectionAssignment_2()); }
	(rule__Move__DirectionAssignment_2)?
	{ after(grammarAccess.getMoveAccess().getDirectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getAlternatives_3()); }
	(rule__Move__Alternatives_3)?
	{ after(grammarAccess.getMoveAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group_3_0__0__Impl
	rule__Move__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getForKeyword_3_0_0()); }
	'for'
	{ after(grammarAccess.getMoveAccess().getForKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group_3_0__1__Impl
	rule__Move__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getDurationAssignment_3_0_1()); }
	(rule__Move__DurationAssignment_3_0_1)
	{ after(grammarAccess.getMoveAccess().getDurationAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getSecondsKeyword_3_0_2()); }
	'seconds'
	{ after(grammarAccess.getMoveAccess().getSecondsKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Turn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__0__Impl
	rule__Turn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getTurnAction_0()); }
	()
	{ after(grammarAccess.getTurnAccess().getTurnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__1__Impl
	rule__Turn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getTurnKeyword_1()); }
	'turn'
	{ after(grammarAccess.getTurnAccess().getTurnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__2__Impl
	rule__Turn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getDirectionAssignment_2()); }
	(rule__Turn__DirectionAssignment_2)?
	{ after(grammarAccess.getTurnAccess().getDirectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getAlternatives_3()); }
	(rule__Turn__Alternatives_3)?
	{ after(grammarAccess.getTurnAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Turn__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group_3_0__0__Impl
	rule__Turn__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getForKeyword_3_0_0()); }
	'for'
	{ after(grammarAccess.getTurnAccess().getForKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group_3_0__1__Impl
	rule__Turn__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getDurationAssignment_3_0_1()); }
	(rule__Turn__DurationAssignment_3_0_1)
	{ after(grammarAccess.getTurnAccess().getDurationAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getSecondsKeyword_3_0_2()); }
	'seconds'
	{ after(grammarAccess.getTurnAccess().getSecondsKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Turn__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group_3_1__0__Impl
	rule__Turn__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getDegreesAssignment_3_1_0()); }
	(rule__Turn__DegreesAssignment_3_1_0)
	{ after(grammarAccess.getTurnAccess().getDegreesAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getDegreesKeyword_3_1_1()); }
	'degrees'
	{ after(grammarAccess.getTurnAccess().getDegreesKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__0__Impl
	rule__Stop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getStopAction_0()); }
	()
	{ after(grammarAccess.getStopAccess().getStopAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__1__Impl
	rule__Stop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getStopKeyword_1()); }
	'stop'
	{ after(grammarAccess.getStopAccess().getStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getGroup_2()); }
	(rule__Stop__Group_2__0)?
	{ after(grammarAccess.getStopAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stop__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group_2__0__Impl
	rule__Stop__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getForKeyword_2_0()); }
	'for'
	{ after(grammarAccess.getStopAccess().getForKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group_2__1__Impl
	rule__Stop__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getDurationAssignment_2_1()); }
	(rule__Stop__DurationAssignment_2_1)
	{ after(grammarAccess.getStopAccess().getDurationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getSecondsKeyword_2_2()); }
	'seconds'
	{ after(grammarAccess.getStopAccess().getSecondsKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__0__Impl
	rule__EFloat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__1__Impl
	rule__EFloat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__2__Impl
	rule__EFloat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
	('.')?
	{ after(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__3__Impl
	rule__EFloat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getGroup_4()); }
	(rule__EFloat__Group_4__0)?
	{ after(grammarAccess.getEFloatAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__0__Impl
	rule__EFloat__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
	(rule__EFloat__Alternatives_4_0)
	{ after(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__1__Impl
	rule__EFloat__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obstacle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__0__Impl
	rule__Obstacle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getObstacleAction_0()); }
	()
	{ after(grammarAccess.getObstacleAccess().getObstacleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__1__Impl
	rule__Obstacle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getMeetsKeyword_1()); }
	'meets'
	{ after(grammarAccess.getObstacleAccess().getMeetsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__2__Impl
	rule__Obstacle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getAnKeyword_2()); }
	'an'
	{ after(grammarAccess.getObstacleAccess().getAnKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getObstacleKeyword_3()); }
	'obstacle'
	{ after(grammarAccess.getObstacleAccess().getObstacleKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tapped__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tapped__Group__0__Impl
	rule__Tapped__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tapped__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTappedAccess().getTappedAction_0()); }
	()
	{ after(grammarAccess.getTappedAccess().getTappedAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tapped__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tapped__Group__1__Impl
	rule__Tapped__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tapped__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTappedAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getTappedAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tapped__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tapped__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tapped__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTappedAccess().getTappedKeyword_2()); }
	'tapped'
	{ after(grammarAccess.getTappedAccess().getTappedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoboProse__MainAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoboProseAccess().getMainMainParserRuleCall_1_3_0()); }
		ruleMain
		{ after(grammarAccess.getRoboProseAccess().getMainMainParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__ListenersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoboProseAccess().getListenersEventListenerParserRuleCall_2_0_0()); }
		ruleEventListener
		{ after(grammarAccess.getRoboProseAccess().getListenersEventListenerParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoboProse__ListenersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoboProseAccess().getListenersEventListenerParserRuleCall_2_1_1_0()); }
		ruleEventListener
		{ after(grammarAccess.getRoboProseAccess().getListenersEventListenerParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__ActionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainAccess().getActionsActionParserRuleCall_0_0()); }
		ruleAction
		{ after(grammarAccess.getMainAccess().getActionsActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__ActionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainAccess().getActionsActionParserRuleCall_1_1_0()); }
		ruleAction
		{ after(grammarAccess.getMainAccess().getActionsActionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__EventAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventListenerAccess().getEventEventParserRuleCall_2_0()); }
		ruleEvent
		{ after(grammarAccess.getEventListenerAccess().getEventEventParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__ActionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventListenerAccess().getActionsActionParserRuleCall_5_0()); }
		ruleAction
		{ after(grammarAccess.getEventListenerAccess().getActionsActionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__ActionsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventListenerAccess().getActionsActionParserRuleCall_6_1_0()); }
		ruleAction
		{ after(grammarAccess.getEventListenerAccess().getActionsActionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__SublistenersAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventListenerAccess().getSublistenersEventListenerParserRuleCall_7_2_0()); }
		ruleEventListener
		{ after(grammarAccess.getEventListenerAccess().getSublistenersEventListenerParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventListener__SublistenersAssignment_7_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventListenerAccess().getSublistenersEventListenerParserRuleCall_7_3_1_0()); }
		ruleEventListener
		{ after(grammarAccess.getEventListenerAccess().getSublistenersEventListenerParserRuleCall_7_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__DirectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getDirectionMOVE_DIRECTIONEnumRuleCall_2_0()); }
		ruleMOVE_DIRECTION
		{ after(grammarAccess.getMoveAccess().getDirectionMOVE_DIRECTIONEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__DurationAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getDurationEFloatParserRuleCall_3_0_1_0()); }
		ruleEFloat
		{ after(grammarAccess.getMoveAccess().getDurationEFloatParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__IsRandomAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getIsRandomRANDOMEnumRuleCall_3_1_0()); }
		ruleRANDOM
		{ after(grammarAccess.getMoveAccess().getIsRandomRANDOMEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__DirectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getDirectionTURN_DIRECTIONEnumRuleCall_2_0()); }
		ruleTURN_DIRECTION
		{ after(grammarAccess.getTurnAccess().getDirectionTURN_DIRECTIONEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__DurationAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getDurationEFloatParserRuleCall_3_0_1_0()); }
		ruleEFloat
		{ after(grammarAccess.getTurnAccess().getDurationEFloatParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__DegreesAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getDegreesEFloatParserRuleCall_3_1_0_0()); }
		ruleEFloat
		{ after(grammarAccess.getTurnAccess().getDegreesEFloatParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__IsRandomAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getIsRandomRANDOMEnumRuleCall_3_2_0()); }
		ruleRANDOM
		{ after(grammarAccess.getTurnAccess().getIsRandomRANDOMEnumRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__DurationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopAccess().getDurationEFloatParserRuleCall_2_1_0()); }
		ruleEFloat
		{ after(grammarAccess.getStopAccess().getDurationEFloatParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_WS : (' '|'\t')+ RULE_NEWLINE?;

RULE_NEWLINE : '\r'? '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;
