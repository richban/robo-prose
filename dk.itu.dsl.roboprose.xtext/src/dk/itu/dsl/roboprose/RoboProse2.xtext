// automatically generated by Xtext
grammar dk.itu.dsl.roboprose.RoboProse with org.eclipse.xtext.common.Terminals

import "http://www.itu.dk/dsl/roboprose" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RoboProse returns RoboProse:
	{RoboProse}
	'RoboProse'
	'{'
		('main' main=Main)?
		('listeners' '{' listeners+=EventListener ( "," listeners+=EventListener)* '}' )?
	'}';

Main returns Main:
	'Main'
	'{'
		'actions' '{' actions+=Action ( "," actions+=Action)* '}' 
	'}';

EventListener returns EventListener:
	'EventListener'
	'{'
		'event' trigger=Event
		('actions' '{' actions+=Action ( "," actions+=Action)* '}' )?
		('sublisteners' '{' sublisteners+=EventListener ( "," sublisteners+=EventListener)* '}' )?
	'}';
	
Action returns Action:
	Move | Turn | Stop;

Event returns Event:
	Obstacle | Tapped;

Move returns Move:
	{Move}
	'Move'
	'{'
		('duration' duration=EFloat)?
		('forward' forward=EBoolean)?
	'}';

Turn returns Turn:
	{Turn}
	'Turn'
	'{'
		('duration' duration=EFloat)?
		('degrees' degrees=EFloat)?
		('left' left=EBoolean)?
	'}';

Stop returns Stop:
	{Stop}
	'Stop'
	'{'
		('duration' duration=EFloat)?
	'}';

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EBoolean returns ecore::EBoolean:
	'true' | 'false';
	
EString returns ecore::EString:
	STRING;	

Obstacle returns Obstacle:
	{Obstacle}
	'Obstacle'
	;

Tapped returns Tapped:
	{Tapped}
	'Tapped'
	;
